version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nestjs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9000
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    container_name: auth-api
    restart: always
    environment:
      DB_HOST: database-api
      HTTP_PORT: 1234
      TCP_PORT: 1235
      JWT_SECRET: MonSuperSecret
      JWT_REFRESH_SECRET: MonSuperRefreshSecret
      TCP_PORT_DB: 1237
    ports:
      - "1234:1234"
      - "1235:1235"
    expose:
      - "1234"
      - "1235"
    networks:
      - app-network

  database-api:
    build:
      context: ./database-api
      dockerfile: Dockerfile
    container_name: database-api
    restart: always
    environment:
      NODE_ENV: development
      AUTH_HOST: auth-api
      AUTH_PORT: 1234
      TCP_PORT: 1237
      HTTP_PORT: 1236
      TCP_PORT_AUTH: 1235
      TCP_PORT_FILES: 1239
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: nestjs
    ports:
      - "1236:1236"
      - "1237:1237"
    expose:
      - "1236"
      - "1237"
    depends_on:
      - postgres
    networks:
      - app-network

  files-handler-api:
    build:
      context: ./files-handler-api
      dockerfile: Dockerfile
    container_name: files-handler-api
    restart: always
    environment:
      TCP_PORT: 1239
      HTTP_PORT: 1238
      TCP_PORT_DB: 1237
      DB_HOST: database-api
      MINIO_ENDPOINT: minio
      MINIO_PUBLIC_URL: http://localhost:9000
      MINIO_PORT: 9000
      MINIO_USE_SSL: false
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      CHROME_HOST: chrome-service
    ports:
      - "1238:1238"
      - "1239:1239"
    expose:
      - "1238"
      - "1239"
    depends_on:
      - minio
    networks:
      - app-network

  chrome:
    image: browserless/chrome:latest
    platform: linux/amd64
    container_name: chrome-service
    networks:
      - app-network
    ports:
      - "3000:3000"
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_AUTH_API_URL: auth-api:1234
      NEXT_PUBLIC_DATABASE_API_URL: database-api:1236
      NEXT_PUBLIC_DOCUMENTS_API_URL: files-handler-api:1238
    ports:
      - "3001:3000"
    depends_on:
      - auth-api
      - database-api
      - files-handler-api
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data: